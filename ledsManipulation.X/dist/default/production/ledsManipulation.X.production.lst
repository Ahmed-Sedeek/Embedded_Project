

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Dec 13 16:19:51 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 05/05/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F46K20 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _OSCTUNE	set	3995
    54  0000                     _OSCCON	set	4051
    55  0000                     _CCPR2H	set	4028
    56  0000                     _CCPR2L	set	4027
    57  0000                     _CCP2CON	set	4026
    58  0000                     _INTCONbits	set	4082
    59  0000                     _INTCON2bits	set	4081
    60  0000                     _WPUB	set	3964
    61  0000                     _ANSELH	set	3967
    62  0000                     _ANSEL	set	3966
    63  0000                     _TRISD	set	3989
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISA	set	3986
    67  0000                     _TRISE	set	3990
    68  0000                     _LATC	set	3979
    69  0000                     _LATB	set	3978
    70  0000                     _LATA	set	3977
    71  0000                     _LATD	set	3980
    72  0000                     _LATE	set	3981
    73  0000                     _ADCON0bits	set	4034
    74  0000                     _ADCON0	set	4034
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _ADCON2	set	4032
    78  0000                     _ADCON1	set	4033
    79                           
    80                           ; #config settings
    81                           
    82                           	psect	cinit
    83  00FF9A                     __pcinit:
    84                           	callstack 0
    85  00FF9A                     start_initialization:
    86                           	callstack 0
    87  00FF9A                     __initialization:
    88                           	callstack 0
    89                           
    90                           ; Clear objects allocated to COMRAM (2 bytes)
    91  00FF9A  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    92  00FF9C  6A01               	clrf	__pbssCOMRAM& (0+255),c
    93  00FF9E                     end_of_initialization:
    94                           	callstack 0
    95  00FF9E                     __end_of__initialization:
    96                           	callstack 0
    97  00FF9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    98  00FFA0  6EF8               	movwf	tblptru,c
    99  00FFA2  0100               	movlb	0
   100  00FFA4  EFC0  F07F         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	bssCOMRAM
   103  000001                     __pbssCOMRAM:
   104                           	callstack 0
   105  000001                     _ADC_InterruptHandler:
   106                           	callstack 0
   107  000001                     	ds	2
   108                           
   109                           	psect	cstackCOMRAM
   110  000000                     __pcstackCOMRAM:
   111                           	callstack 0
   112  000000                     
   113                           ; 1 bytes @ 0x0
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 9 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called:    2
   139 ;; This function calls:
   140 ;;		_SYSTEM_Initialize
   141 ;; This function is called by:
   142 ;;		Startup code after reset
   143 ;; This function uses a non-reentrant model
   144 ;;
   145                           
   146                           	psect	text0
   147  00FF80                     __ptext0:
   148                           	callstack 0
   149  00FF80                     _main:
   150                           	callstack 29
   151  00FF80                     
   152                           ;main.c: 12:     SYSTEM_Initialize();
   153  00FF80  ECD4  F07F         	call	_SYSTEM_Initialize	;wreg free
   154  00FF84                     l110:
   155  00FF84  EFC2  F07F         	goto	l110
   156  00FF88  EF00  F000         	goto	start
   157  00FF8C                     __end_of_main:
   158                           	callstack 0
   159                           
   160 ;; *************** function _SYSTEM_Initialize *****************
   161 ;; Defined at:
   162 ;;		line 50 in file "mcc_generated_files/mcc.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2, cstack
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;Total ram usage:        0 bytes
   181 ;; Hardware stack levels used:    1
   182 ;; Hardware stack levels required when called:    1
   183 ;; This function calls:
   184 ;;		_ADC_Initialize
   185 ;;		_CCP2_Initialize
   186 ;;		_OSCILLATOR_Initialize
   187 ;;		_PIN_MANAGER_Initialize
   188 ;; This function is called by:
   189 ;;		_main
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text1
   194  00FFA8                     __ptext1:
   195                           	callstack 0
   196  00FFA8                     _SYSTEM_Initialize:
   197                           	callstack 29
   198  00FFA8                     
   199                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   200  00FFA8  ECE8  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   201                           
   202                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   203  00FFAC  ECBB  F07F         	call	_OSCILLATOR_Initialize	;wreg free
   204                           
   205                           ;mcc_generated_files/mcc.c: 55:     CCP2_Initialize();
   206  00FFB0  ECC6  F07F         	call	_CCP2_Initialize	;wreg free
   207                           
   208                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
   209  00FFB4  ECDD  F07F         	call	_ADC_Initialize	;wreg free
   210  00FFB8  0012               	return		;funcret
   211  00FFBA                     __end_of_SYSTEM_Initialize:
   212                           	callstack 0
   213                           
   214 ;; *************** function _PIN_MANAGER_Initialize *****************
   215 ;; Defined at:
   216 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels used:    1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		_SYSTEM_Initialize
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text2
   244  00FFD0                     __ptext2:
   245                           	callstack 0
   246  00FFD0                     _PIN_MANAGER_Initialize:
   247                           	callstack 29
   248  00FFD0                     
   249                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   250  00FFD0  0E00               	movlw	0
   251  00FFD2  6E8D               	movwf	141,c	;volatile
   252                           
   253                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   254  00FFD4  0E00               	movlw	0
   255  00FFD6  6E8C               	movwf	140,c	;volatile
   256                           
   257                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   258  00FFD8  0E00               	movlw	0
   259  00FFDA  6E89               	movwf	137,c	;volatile
   260                           
   261                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   262  00FFDC  0E00               	movlw	0
   263  00FFDE  6E8A               	movwf	138,c	;volatile
   264                           
   265                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   266  00FFE0  0E00               	movlw	0
   267  00FFE2  6E8B               	movwf	139,c	;volatile
   268                           
   269                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   270  00FFE4  0E07               	movlw	7
   271  00FFE6  6E96               	movwf	150,c	;volatile
   272  00FFE8                     
   273                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   274  00FFE8  6892               	setf	146,c	;volatile
   275  00FFEA                     
   276                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   277  00FFEA  6893               	setf	147,c	;volatile
   278                           
   279                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x00;
   280  00FFEC  0E00               	movlw	0
   281  00FFEE  6E94               	movwf	148,c	;volatile
   282  00FFF0                     
   283                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   284  00FFF0  6895               	setf	149,c	;volatile
   285  00FFF2                     
   286                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   287  00FFF2  687E               	setf	126,c	;volatile
   288                           
   289                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   290  00FFF4  0E1F               	movlw	31
   291  00FFF6  6E7F               	movwf	127,c	;volatile
   292                           
   293                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   294  00FFF8  0E00               	movlw	0
   295  00FFFA  6E7C               	movwf	124,c	;volatile
   296  00FFFC                     
   297                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   298  00FFFC  8EF1               	bsf	241,7,c	;volatile
   299  00FFFE  0012               	return		;funcret
   300  010000                     __end_of_PIN_MANAGER_Initialize:
   301                           	callstack 0
   302                           
   303 ;; *************** function _OSCILLATOR_Initialize *****************
   304 ;; Defined at:
   305 ;;		line 59 in file "mcc_generated_files/mcc.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_SYSTEM_Initialize
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           	psect	text3
   333  00FF76                     __ptext3:
   334                           	callstack 0
   335  00FF76                     _OSCILLATOR_Initialize:
   336                           	callstack 29
   337  00FF76                     
   338                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x30;
   339  00FF76  0E30               	movlw	48
   340  00FF78  6ED3               	movwf	211,c	;volatile
   341                           
   342                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   343  00FF7A  0E00               	movlw	0
   344  00FF7C  6E9B               	movwf	155,c	;volatile
   345  00FF7E  0012               	return		;funcret
   346  00FF80                     __end_of_OSCILLATOR_Initialize:
   347                           	callstack 0
   348                           
   349 ;; *************** function _CCP2_Initialize *****************
   350 ;; Defined at:
   351 ;;		line 49 in file "mcc_generated_files/ccp2.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_SYSTEM_Initialize
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text4
   379  00FF8C                     __ptext4:
   380                           	callstack 0
   381  00FF8C                     _CCP2_Initialize:
   382                           	callstack 29
   383  00FF8C                     
   384                           ;mcc_generated_files/ccp2.c: 53:  CCP2CON = 0x00;
   385  00FF8C  0E00               	movlw	0
   386  00FF8E  6EBA               	movwf	186,c	;volatile
   387                           
   388                           ;mcc_generated_files/ccp2.c: 56:  CCPR2L = 0x00;
   389  00FF90  0E00               	movlw	0
   390  00FF92  6EBB               	movwf	187,c	;volatile
   391                           
   392                           ;mcc_generated_files/ccp2.c: 59:  CCPR2H = 0x00;
   393  00FF94  0E00               	movlw	0
   394  00FF96  6EBC               	movwf	188,c	;volatile
   395  00FF98  0012               	return		;funcret
   396  00FF9A                     __end_of_CCP2_Initialize:
   397                           	callstack 0
   398                           
   399 ;; *************** function _ADC_Initialize *****************
   400 ;; Defined at:
   401 ;;		line 62 in file "mcc_generated_files/adc.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_SYSTEM_Initialize
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text5
   429  00FFBA                     __ptext5:
   430                           	callstack 0
   431  00FFBA                     _ADC_Initialize:
   432                           	callstack 29
   433  00FFBA                     
   434                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
   435  00FFBA  0E00               	movlw	0
   436  00FFBC  6EC1               	movwf	193,c	;volatile
   437                           
   438                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x00;
   439  00FFBE  0E00               	movlw	0
   440  00FFC0  6EC0               	movwf	192,c	;volatile
   441                           
   442                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
   443  00FFC2  0E00               	movlw	0
   444  00FFC4  6EC3               	movwf	195,c	;volatile
   445                           
   446                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
   447  00FFC6  0E00               	movlw	0
   448  00FFC8  6EC4               	movwf	196,c	;volatile
   449                           
   450                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
   451  00FFCA  0E01               	movlw	1
   452  00FFCC  6EC2               	movwf	194,c	;volatile
   453  00FFCE  0012               	return		;funcret
   454  00FFD0                     __end_of_ADC_Initialize:
   455                           	callstack 0
   456  0000                     
   457                           	psect	rparam
   458  0000                     
   459                           	psect	idloc
   460                           
   461                           ;Config register IDLOC0 @ 0x200000
   462                           ;	unspecified, using default values
   463  200000                     	org	2097152
   464  200000  FF                 	db	255
   465                           
   466                           ;Config register IDLOC1 @ 0x200001
   467                           ;	unspecified, using default values
   468  200001                     	org	2097153
   469  200001  FF                 	db	255
   470                           
   471                           ;Config register IDLOC2 @ 0x200002
   472                           ;	unspecified, using default values
   473  200002                     	org	2097154
   474  200002  FF                 	db	255
   475                           
   476                           ;Config register IDLOC3 @ 0x200003
   477                           ;	unspecified, using default values
   478  200003                     	org	2097155
   479  200003  FF                 	db	255
   480                           
   481                           ;Config register IDLOC4 @ 0x200004
   482                           ;	unspecified, using default values
   483  200004                     	org	2097156
   484  200004  FF                 	db	255
   485                           
   486                           ;Config register IDLOC5 @ 0x200005
   487                           ;	unspecified, using default values
   488  200005                     	org	2097157
   489  200005  FF                 	db	255
   490                           
   491                           ;Config register IDLOC6 @ 0x200006
   492                           ;	unspecified, using default values
   493  200006                     	org	2097158
   494  200006  FF                 	db	255
   495                           
   496                           ;Config register IDLOC7 @ 0x200007
   497                           ;	unspecified, using default values
   498  200007                     	org	2097159
   499  200007  FF                 	db	255
   500                           
   501                           	psect	config
   502                           
   503                           ; Padding undefined space
   504  300000                     	org	3145728
   505  300000  FF                 	db	255
   506                           
   507                           ;Config register CONFIG1H @ 0x300001
   508                           ;	Oscillator Selection bits
   509                           ;	FOSC = HS, HS oscillator
   510                           ;	Fail-Safe Clock Monitor Enable bit
   511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   512                           ;	Internal/External Oscillator Switchover bit
   513                           ;	IESO = OFF, Oscillator Switchover mode disabled
   514  300001                     	org	3145729
   515  300001  02                 	db	2
   516                           
   517                           ;Config register CONFIG2L @ 0x300002
   518                           ;	Power-up Timer Enable bit
   519                           ;	PWRT = OFF, PWRT disabled
   520                           ;	Brown-out Reset Enable bits
   521                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   522                           ;	Brown Out Reset Voltage bits
   523                           ;	BORV = 18, VBOR set to 1.8 V nominal
   524  300002                     	org	3145730
   525  300002  1F                 	db	31
   526                           
   527                           ;Config register CONFIG2H @ 0x300003
   528                           ;	Watchdog Timer Enable bit
   529                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   530                           ;	Watchdog Timer Postscale Select bits
   531                           ;	WDTPS = 32768, 1:32768
   532  300003                     	org	3145731
   533  300003  1E                 	db	30
   534                           
   535                           ; Padding undefined space
   536  300004                     	org	3145732
   537  300004  FF                 	db	255
   538                           
   539                           ;Config register CONFIG3H @ 0x300005
   540                           ;	CCP2 MUX bit
   541                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   542                           ;	PORTB A/D Enable bit
   543                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   544                           ;	Low-Power Timer1 Oscillator Enable bit
   545                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   546                           ;	HFINTOSC Fast Start-up
   547                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   548                           ;	MCLR Pin Enable bit
   549                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   550  300005                     	org	3145733
   551  300005  8B                 	db	139
   552                           
   553                           ;Config register CONFIG4L @ 0x300006
   554                           ;	Stack Full/Underflow Reset Enable bit
   555                           ;	STVREN = ON, Stack full/underflow will cause Reset
   556                           ;	Single-Supply ICSP Enable bit
   557                           ;	LVP = ON, Single-Supply ICSP enabled
   558                           ;	Extended Instruction Set Enable bit
   559                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   560                           ;	Background Debugger Enable bit
   561                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   562  300006                     	org	3145734
   563  300006  85                 	db	133
   564                           
   565                           ; Padding undefined space
   566  300007                     	org	3145735
   567  300007  FF                 	db	255
   568                           
   569                           ;Config register CONFIG5L @ 0x300008
   570                           ;	Code Protection Block 0
   571                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   572                           ;	Code Protection Block 1
   573                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   574                           ;	Code Protection Block 2
   575                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   576                           ;	Code Protection Block 3
   577                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   578  300008                     	org	3145736
   579  300008  0F                 	db	15
   580                           
   581                           ;Config register CONFIG5H @ 0x300009
   582                           ;	Boot Block Code Protection bit
   583                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   584                           ;	Data EEPROM Code Protection bit
   585                           ;	CPD = OFF, Data EEPROM not code-protected
   586  300009                     	org	3145737
   587  300009  C0                 	db	192
   588                           
   589                           ;Config register CONFIG6L @ 0x30000A
   590                           ;	Write Protection Block 0
   591                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   592                           ;	Write Protection Block 1
   593                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   594                           ;	Write Protection Block 2
   595                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   596                           ;	Write Protection Block 3
   597                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
   598  30000A                     	org	3145738
   599  30000A  0F                 	db	15
   600                           
   601                           ;Config register CONFIG6H @ 0x30000B
   602                           ;	Configuration Register Write Protection bit
   603                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   604                           ;	Boot Block Write Protection bit
   605                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   606                           ;	Data EEPROM Write Protection bit
   607                           ;	WRTD = OFF, Data EEPROM not write-protected
   608  30000B                     	org	3145739
   609  30000B  E0                 	db	224
   610                           
   611                           ;Config register CONFIG7L @ 0x30000C
   612                           ;	Table Read Protection Block 0
   613                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   614                           ;	Table Read Protection Block 1
   615                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   616                           ;	Table Read Protection Block 2
   617                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   618                           ;	Table Read Protection Block 3
   619                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   620  30000C                     	org	3145740
   621  30000C  0F                 	db	15
   622                           
   623                           ;Config register CONFIG7H @ 0x30000D
   624                           ;	Boot Block Table Read Protection bit
   625                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   626  30000D                     	org	3145741
   627  30000D  40                 	db	64
   628                           tosu	equ	0xFFF
   629                           tosh	equ	0xFFE
   630                           tosl	equ	0xFFD
   631                           stkptr	equ	0xFFC
   632                           pclatu	equ	0xFFB
   633                           pclath	equ	0xFFA
   634                           pcl	equ	0xFF9
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           prodh	equ	0xFF4
   640                           prodl	equ	0xFF3
   641                           indf0	equ	0xFEF
   642                           postinc0	equ	0xFEE
   643                           postdec0	equ	0xFED
   644                           preinc0	equ	0xFEC
   645                           plusw0	equ	0xFEB
   646                           fsr0h	equ	0xFEA
   647                           fsr0l	equ	0xFE9
   648                           wreg	equ	0xFE8
   649                           indf1	equ	0xFE7
   650                           postinc1	equ	0xFE6
   651                           postdec1	equ	0xFE5
   652                           preinc1	equ	0xFE4
   653                           plusw1	equ	0xFE3
   654                           fsr1h	equ	0xFE2
   655                           fsr1l	equ	0xFE1
   656                           bsr	equ	0xFE0
   657                           indf2	equ	0xFDF
   658                           postinc2	equ	0xFDE
   659                           postdec2	equ	0xFDD
   660                           preinc2	equ	0xFDC
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       2       1        2.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      32        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Dec 13 16:19:51 2020

                             l19 FFCE                               l73 FFFE  
                             l85 FF98                              l100 FFB8  
                            l110 FF84                              l103 FF7E  
                            l111 FF84                              l820 FFEA  
                            l814 FFBA                              l830 FF76  
                            l822 FFF0                              l824 FFF2  
                            l816 FFD0                              l832 FFA8  
                            l826 FFFC                              l818 FFE8  
                            l828 FF8C                              l882 FF80  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _WPUB 000F7C  
        __end_of_CCP2_Initialize FF9A                             _main FF80  
                           start 0000                     ___param_bank 000000  
 __size_of_OSCILLATOR_Initialize 000A    __end_of_OSCILLATOR_Initialize FF80  
                          ?_main 0000                            _ANSEL 000F7E  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                  __initialization FF9A  
                   __end_of_main FF8C                           ??_main 0000  
                  __activetblptr 000002                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR2H 000FBC                           _CCPR2L 000FBB  
                         _ANSELH 000F7F                           _OSCCON 000FD3  
               ?_CCP2_Initialize 0000                           tblptru 000FF8  
              _SYSTEM_Initialize FFA8                       __accesstop 0060  
        __end_of__initialization FF9E               ?_SYSTEM_Initialize 0000  
                  ___rparam_used 000001                   __pcstackCOMRAM 0000  
            ??_SYSTEM_Initialize 0000        __end_of_SYSTEM_Initialize FFBA  
                        _CCP2CON 000FBA          __size_of_ADC_Initialize 0016  
                        _OSCTUNE 000F9B             _ADC_InterruptHandler 0001  
                        __Hparam 0000                          __Lparam 0000  
                        __pcinit FF9A                          __ramtop 1000  
                        __ptext0 FF80                          __ptext1 FFA8  
                        __ptext2 FFD0                          __ptext3 FF76  
                        __ptext4 FF8C                          __ptext5 FFBA  
          _OSCILLATOR_Initialize FF76         ??_PIN_MANAGER_Initialize 0000  
     __size_of_SYSTEM_Initialize 0012             end_of_initialization FF9E  
                  __Lmediumconst 0000         __size_of_CCP2_Initialize 000E  
                 _ADC_Initialize FFBA           ?_OSCILLATOR_Initialize 0000  
            start_initialization FF9A  __size_of_PIN_MANAGER_Initialize 0030  
         __end_of_ADC_Initialize FFD0                      __pbssCOMRAM 0001  
         _PIN_MANAGER_Initialize FFD0                  ?_ADC_Initialize 0000  
              ??_CCP2_Initialize 0000                       _ADCON0bits 000FC2  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000          ??_OSCILLATOR_Initialize 0000  
                  __size_of_main 000C                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0000                 ??_ADC_Initialize 0000  
                _CCP2_Initialize FF8C   __end_of_PIN_MANAGER_Initialize 0000  
